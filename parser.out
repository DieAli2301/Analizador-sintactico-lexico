Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    DIVIDE
    EQ
    GE
    GT
    LE
    MINUS
    NE
    STRING
    TIMES

Grammar

Rule 0     S' -> program
Rule 1     program -> for_loop console_statement
Rule 2     for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE
Rule 3     console_statement -> CONSOLE DOT LOG LPAREN expression RPAREN SEMICOLON
Rule 4     expression -> SINGLE_QUOTE ID ID SINGLE_QUOTE PLUS ID
Rule 5     expression -> GLOBAL
Rule 6     block -> console_statement

Terminals, with rules where they appear

ASSIGN               : 2
COMMA                : 
CONSOLE              : 3
DIVIDE               : 
DOT                  : 3
EQ                   : 
FOR                  : 2
GE                   : 
GLOBAL               : 5
GT                   : 
ID                   : 2 2 2 4 4 4
LBRACE               : 2
LE                   : 
LOG                  : 3
LPAREN               : 2 3
LT                   : 2
MINUS                : 
NE                   : 
NUMBER               : 2 2
PLUS                 : 2 2 4
RBRACE               : 2
RPAREN               : 2 3
SEMICOLON            : 2 2 3
SINGLE_QUOTE         : 4 4
STRING               : 
TIMES                : 
VAR                  : 2
error                : 

Nonterminals, with rules where they appear

block                : 2
console_statement    : 1 6
expression           : 3
for_loop             : 1
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . for_loop console_statement
    (2) for_loop -> . FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    FOR             shift and go to state 3

    program                        shift and go to state 1
    for_loop                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> for_loop . console_statement
    (3) console_statement -> . CONSOLE DOT LOG LPAREN expression RPAREN SEMICOLON

    CONSOLE         shift and go to state 5

    console_statement              shift and go to state 4

state 3

    (2) for_loop -> FOR . LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    LPAREN          shift and go to state 6


state 4

    (1) program -> for_loop console_statement .

    $end            reduce using rule 1 (program -> for_loop console_statement .)


state 5

    (3) console_statement -> CONSOLE . DOT LOG LPAREN expression RPAREN SEMICOLON

    DOT             shift and go to state 7


state 6

    (2) for_loop -> FOR LPAREN . VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    VAR             shift and go to state 8


state 7

    (3) console_statement -> CONSOLE DOT . LOG LPAREN expression RPAREN SEMICOLON

    LOG             shift and go to state 9


state 8

    (2) for_loop -> FOR LPAREN VAR . ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    ID              shift and go to state 10


state 9

    (3) console_statement -> CONSOLE DOT LOG . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 11


state 10

    (2) for_loop -> FOR LPAREN VAR ID . ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    ASSIGN          shift and go to state 12


state 11

    (3) console_statement -> CONSOLE DOT LOG LPAREN . expression RPAREN SEMICOLON
    (4) expression -> . SINGLE_QUOTE ID ID SINGLE_QUOTE PLUS ID
    (5) expression -> . GLOBAL

    SINGLE_QUOTE    shift and go to state 14
    GLOBAL          shift and go to state 15

    expression                     shift and go to state 13

state 12

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN . NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    NUMBER          shift and go to state 16


state 13

    (3) console_statement -> CONSOLE DOT LOG LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 17


state 14

    (4) expression -> SINGLE_QUOTE . ID ID SINGLE_QUOTE PLUS ID

    ID              shift and go to state 18


state 15

    (5) expression -> GLOBAL .

    RPAREN          reduce using rule 5 (expression -> GLOBAL .)


state 16

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER . SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    SEMICOLON       shift and go to state 19


state 17

    (3) console_statement -> CONSOLE DOT LOG LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 20


state 18

    (4) expression -> SINGLE_QUOTE ID . ID SINGLE_QUOTE PLUS ID

    ID              shift and go to state 21


state 19

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON . ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    ID              shift and go to state 22


state 20

    (3) console_statement -> CONSOLE DOT LOG LPAREN expression RPAREN SEMICOLON .

    $end            reduce using rule 3 (console_statement -> CONSOLE DOT LOG LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 3 (console_statement -> CONSOLE DOT LOG LPAREN expression RPAREN SEMICOLON .)


state 21

    (4) expression -> SINGLE_QUOTE ID ID . SINGLE_QUOTE PLUS ID

    SINGLE_QUOTE    shift and go to state 23


state 22

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID . LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    LT              shift and go to state 24


state 23

    (4) expression -> SINGLE_QUOTE ID ID SINGLE_QUOTE . PLUS ID

    PLUS            shift and go to state 25


state 24

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT . NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    NUMBER          shift and go to state 26


state 25

    (4) expression -> SINGLE_QUOTE ID ID SINGLE_QUOTE PLUS . ID

    ID              shift and go to state 27


state 26

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER . SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE

    SEMICOLON       shift and go to state 28


state 27

    (4) expression -> SINGLE_QUOTE ID ID SINGLE_QUOTE PLUS ID .

    RPAREN          reduce using rule 4 (expression -> SINGLE_QUOTE ID ID SINGLE_QUOTE PLUS ID .)


state 28

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON . ID PLUS PLUS RPAREN LBRACE block RBRACE

    ID              shift and go to state 29


state 29

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID . PLUS PLUS RPAREN LBRACE block RBRACE

    PLUS            shift and go to state 30


state 30

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS . PLUS RPAREN LBRACE block RBRACE

    PLUS            shift and go to state 31


state 31

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS . RPAREN LBRACE block RBRACE

    RPAREN          shift and go to state 32


state 32

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN . LBRACE block RBRACE

    LBRACE          shift and go to state 33


state 33

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE . block RBRACE
    (6) block -> . console_statement
    (3) console_statement -> . CONSOLE DOT LOG LPAREN expression RPAREN SEMICOLON

    CONSOLE         shift and go to state 5

    block                          shift and go to state 34
    console_statement              shift and go to state 35

state 34

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block . RBRACE

    RBRACE          shift and go to state 36


state 35

    (6) block -> console_statement .

    RBRACE          reduce using rule 6 (block -> console_statement .)


state 36

    (2) for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE .

    CONSOLE         reduce using rule 2 (for_loop -> FOR LPAREN VAR ID ASSIGN NUMBER SEMICOLON ID LT NUMBER SEMICOLON ID PLUS PLUS RPAREN LBRACE block RBRACE .)

